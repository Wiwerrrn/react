{"ast":null,"code":"import _slicedToArray from \"/home/ewelina/react/ReactPoradnik/react-od-podstaw-pusty/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ewelina/react/ReactPoradnik/react-od-podstaw-pusty/src/components/TodoList/TodoList.js\";\nimport React, { useState } from 'react';\nimport ToDo from './Todo';\n\nfunction TodoList(props) {\n  const _useState = useState(['']),\n        _useState2 = _slicedToArray(_useState, 2),\n        todoList = _useState2[0],\n        setTodoList = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        inputValue = _useState4[0],\n        setInputValue = _useState4[1];\n\n  const handleInputChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n    setInputValue(value);\n  };\n\n  const handleButtonClick = () => {\n    /// setTodoList([...todoList, inputValue]);\n    setInputValue('');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"todo list\", React.createElement(\"input\", {\n    name: \"Todo input\",\n    placeholder: \"co bedziemy robic?\",\n    value: inputValue,\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: handleButtonClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Dodaj\"), todoList.map(todo => React.createElement(ToDo, {\n    key: todo,\n    todo: todo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })));\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/home/ewelina/react/ReactPoradnik/react-od-podstaw-pusty/src/components/TodoList/TodoList.js"],"names":["React","useState","ToDo","TodoList","props","todoList","setTodoList","inputValue","setInputValue","handleInputChange","event","target","value","name","handleButtonClick","map","todo"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,oBACWH,QAAQ,CAAC,CAAC,EAAD,CAAD,CADnB;AAAA;AAAA,QACdI,QADc;AAAA,QACJC,WADI;;AAAA,qBAEeL,QAAQ,CAAC,EAAD,CAFvB;AAAA;AAAA,QAEdM,UAFc;AAAA,QAEFC,aAFE;;AAGrB,QAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAAA,0BACXA,KAAK,CAACC,MADK;AAAA,UAC1BC,KAD0B,iBAC1BA,KAD0B;AAAA,UACnBC,IADmB,iBACnBA,IADmB;AAEjCL,IAAAA,aAAa,CAACI,KAAD,CAAb;AACH,GAHD;;AAIA,QAAME,iBAAiB,GAAG,MAAM;AAC5B;AACAN,IAAAA,aAAa,CAAC,EAAD,CAAb;AACH,GAHD;;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA;AACI,IAAA,IAAI,EAAG,YADX;AAEI,IAAA,WAAW,EAAC,oBAFhB;AAGI,IAAA,KAAK,EAAED,UAHX;AAII,IAAA,QAAQ,EAAGE,iBAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAQA;AACI,IAAA,OAAO,EAAEK,iBADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARA,EAaCT,QAAQ,CAACU,GAAT,CAAcC,IAAD,IACV,oBAAC,IAAD;AACI,IAAA,GAAG,EAAIA,IADX;AAEI,IAAA,IAAI,EAAIA,IAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAbD,CADJ;AAqBH;;AAED,eAAeb,QAAf","sourcesContent":["import React, {useState} from 'react';\nimport ToDo from './Todo';\n\nfunction TodoList(props) {\n    const [todoList, setTodoList] = useState(['']);\n    const [inputValue, setInputValue] = useState('');\n    const handleInputChange = (event) => {\n        const {value, name} = event.target;\n        setInputValue(value);    \n    }\n    const handleButtonClick = () => {\n        /// setTodoList([...todoList, inputValue]);\n        setInputValue('');\n    }\n    return (\n        <div>\n        todo list\n        <input \n            name = 'Todo input'\n            placeholder=\"co bedziemy robic?\"\n            value={inputValue}\n            onChange ={handleInputChange}\n        />\n        <button\n            onClick={handleButtonClick}\n        >\n            Dodaj\n        </button>\n        {todoList.map((todo) => (\n            <ToDo\n                key = {todo}\n                todo = {todo}    \n             />\n        ))}</div>\n    )\n}\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}